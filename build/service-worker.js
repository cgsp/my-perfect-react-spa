"use strict";var precacheConfig=[["./index.html","71797580feedff3b9c7daa6954bd0ccd"],["./static/css/app.86efd793.css","86efd793656e19662e63c85d16da323d"],["./static/js/0.3cca2ba3.chunk.js","d743c8877b4e6d3ce3e030b5511a1811"],["./static/js/1.bc321259.chunk.js","e715d32f1e25e2438de6490d3707ee00"],["./static/js/2.81ea642d.chunk.js","13b199c4a1debff333cf268af7b0a68d"],["./static/js/app.f12c106c.js","d08cd8bea1b728c182ab7f89e5b61ac3"],["./static/js/manifest.2f504187.js","b072c438b1998d8b3ae70f4485ffd43f"],["./static/js/vendor.d48cfceb.js","f4ff5e062e2954390c37435b2b0d4880"],["./static/media/loading1.gif","ae6e763326f742d34c051ca98ecd8a8e"],["./static/media/loading3.gif","1aea242fd056e997678d189a750e982a"],["./static/media/loading4.gif","c957ec084e685c341018997dc462ddda"],["./static/media/loading5.gif","b6ce261cabb6d4e1526d82c52bb31e24"],["./static/media/loading6.gif","838f5eb0df9bed4eabef6992c8738c01"],["./static/media/loading7.gif","978f295585736ceca113370a0e02bb25"],["./static/media/loading8.gif","81c2710083bc94092acd8cfb5e115dae"],["./static/media/loading9.gif","8710e286ae330b4dd45d3c6f8d999ea1"],["./static/media/music-icon.eot","72f61f5619a4137f388581bc8ec1c34d"],["./static/media/music-icon.svg","8a3485762b0fce80ad7e3d76262e65e7"],["./static/media/music-icon.ttf","453725f541422e39397accbade389cea"],["./static/media/music-icon.woff","2a8a87a7d9d97d6ac2c8dd7388714f9b"],["./static/media/page_bg@2x.png","f4ea50112e5eb2b2d6e0162815449291"],["./static/media/page_bg@3x.png","87c988b9c7e52f8eceb46e0b12d85782"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="./index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});